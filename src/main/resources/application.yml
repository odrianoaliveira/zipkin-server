# Spring
spring:
  cloud.stream:
    rabbit:
      bindings:
        sleuth.consumer.exchangeType: fanout
    bindings:
      sleuth:
        binder: zipkin
        group: ${spring.cloud.client.hostname}:${PID:${random.int}}
        destination: zipkin
    binders:
      zipkin:
        type: rabbit
        environment:
          spring.rabbitmq.addresses: ${ZIPKIN_RABBIT_ADDRESSES:digdx01.interno}

# Endpoints
endpoints:
  restart:
    enabled: true

# Eureka
eureka:
  client:
    serviceUrl:
      defaultZone: ${REGISTRY_SERVICE_URLS:http://registry:8761/eureka}

# Logging
logging:
  level:
    com.netflix.discovery: 'INFO'
    org.springframework.cloud: 'INFO'
  path: /oidigital/logs
  file: ${logging.path}/${spring.application.name}_application.log

# Management
management:
  security:
    enabled: false

# Server
server:
  port: 9411
  tomcat:
    accesslog:
      enabled: true
      directory: ${logging.path}/
      prefix: ${spring.application.name}_access_log

---

spring:
  profiles: development
  cloud.stream:
    rabbit:
      bindings:
        sleuth.consumer.exchangeType: fanout
    bindings:
      sleuth:
        binder: zipkin
        group: ${spring.cloud.client.hostname}:${PID:${random.int}}
        destination: zipkin
    binders:
      zipkin:
        type: rabbit
        environment:
          spring.rabbitmq.addresses: digdx01.interno
# Eureka
eureka:
  client:
    serviceUrl:
      defaultZone: http://digdx01.interno:8761/eureka

---

spring:
  profiles: staging

---

spring:
  profiles: production

eureka:
  environment: "Produção"
